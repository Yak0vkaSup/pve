import{_ as k,u as D,r as C,a as F,o as U,b as r,c as s,w as l,v as d,d as o,e as n,f as i,F as v,g as S,t as f}from"./index-BXjOHD8k.js";const N={class:"button-container"},w=["value"],M=["value"],T={__name:"NodesSettings",setup(V){const a=D(),u=C(null),g=F();U(async()=>{g.isAuthenticated});const G=()=>{a.loadGraphFromServer(),a.graphName=a.selectedGraph},h=()=>{u.value.click()},c=m=>{const e=m.target.files[0];if(e){const t=new FileReader;t.onload=y=>{const b=y.target.result;try{const p=JSON.parse(b);a.loadGraphFromFile(p)}catch(p){console.error("Error parsing uploaded graph JSON:",p)}},t.readAsText(e)}};return(m,e)=>(r(),s("div",N,[l(n("input",{"onUpdate:modelValue":e[0]||(e[0]=t=>o(a).graphName=t),placeholder:"Enter graph name",class:"input-graph-name"},null,512),[[d,o(a).graphName]]),n("button",{onClick:e[1]||(e[1]=(...t)=>o(a).saveGraphToServer&&o(a).saveGraphToServer(...t))},"Save"),n("button",{onClick:e[2]||(e[2]=(...t)=>o(a).deleteGraphToServer&&o(a).deleteGraphToServer(...t))},"Delete"),l(n("select",{"onUpdate:modelValue":e[3]||(e[3]=t=>o(a).selectedGraph=t),onFocus:e[4]||(e[4]=(...t)=>o(a).fetchSavedGraphs&&o(a).fetchSavedGraphs(...t)),onChange:G,class:"select-saved-graph"},[e[11]||(e[11]=n("option",{disabled:"",value:""},"Select a saved graph",-1)),(r(!0),s(v,null,S(o(a).savedGraphs,t=>(r(),s("option",{key:t.id,value:t.name},f(t.name),9,w))),128))],544),[[i,o(a).selectedGraph]]),l(n("input",{type:"date","onUpdate:modelValue":e[5]||(e[5]=t=>o(a).startDate=t),class:"input-date",placeholder:"Start Date"},null,512),[[d,o(a).startDate]]),l(n("input",{type:"date","onUpdate:modelValue":e[6]||(e[6]=t=>o(a).endDate=t),class:"input-date",placeholder:"End Date"},null,512),[[d,o(a).endDate]]),l(n("select",{"onUpdate:modelValue":e[7]||(e[7]=t=>o(a).timeframe=t),class:"select-timeframe"},e[12]||(e[12]=[n("option",{value:"1min"},"1 Min",-1),n("option",{value:"5min"},"5 Min",-1),n("option",{value:"15min"},"15 Min",-1),n("option",{value:"30min"},"30 Min",-1)]),512),[[i,o(a).timeframe]]),l(n("select",{"onUpdate:modelValue":e[8]||(e[8]=t=>o(a).symbol=t),class:"select-symbol"},[e[13]||(e[13]=n("option",{disabled:"",value:""},"Select a symbol",-1)),(r(!0),s(v,null,S(o(a).symbolOptions,t=>(r(),s("option",{key:t,value:t},f(t),9,M))),128))],512),[[i,o(a).symbol]]),n("button",{onClick:e[9]||(e[9]=async()=>{await o(a).saveGraphToServer(),o(a).compileGraph()})}," Compile "),n("button",{onClick:e[10]||(e[10]=(...t)=>o(a).downloadGraph&&o(a).downloadGraph(...t))},"Download"),n("button",{onClick:h},"Upload"),n("input",{type:"file",ref_key:"fileInput",ref:u,onChange:c,accept:".json",style:{display:"none"}},null,544)]))}},E=k(T,[["__scopeId","data-v-bd3cde38"]]);export{E as default};
